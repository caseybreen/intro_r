---
title: "Problem Set 1 Solutions"
subtitle: "Introduction to R | University of Oxford Sociology"
author: "Casey Breen"
format: pdf
---

# Problem Set 1

Complete the following questions in R within a Quarto document.

## Exercise 1: Assignment, Arithmetic, Logical Expressions

### 1a

Assign `x` and `y` to take values 3 and 4.

```{r}
#| echo: true
#| 
# Assign x and y to take values 3 and 4
x <- 3
y <- 4
```

### 1b

Create a new variable `z` as the product of `x` and `y`.

```{r}
#| echo: true
#| 
# Create a new variable z as the product of variables x and y
z <- x * y
```

### 1c

Calculate the square of 3 and assign it to a variable called `three_squared`.

```{r}
#| echo: true
#| 
# Write code to calculate the square of 3 and assign it to a variable three_squared
three_squared <- 3^2
```

### 1d

Write a logical expression to check if `three_squared` is greater than 10. Discuss scenarios where such a filter could be useful.

```{r}
#| echo: true
#| 
# Write a logical expression to check if `three_squared` is greater than 10
three_squared > 10

```

### 1e

Write a logical expression to test whether `three_squared` is not greater than 10. Use the `negate` symbol.

```{r}
#| echo: true

# Write a logical expression to check if `three_squared` is not greater than 10
!(three_squared <= 10)
```

## Exercise 2: Sequencing

### 2a

Generate vectors containing the numbers 100 to 105 using three different methods (`c()`, `seq()`, `:`). Discuss the convenience of each method.

```{r}
#| echo: true
#| 
# Generate a vector using c() method
vector_c <- c(100, 101, 102, 103, 104, 105)

# Generate a vector using seq() method
vector_seq <- seq(100, 105, by = 1)

# Generate a vector using : operator
vector_colon <- c(100:105) 
```

***Answer**: The first method, generating a vector using `c()` is convenient when you are only including a few elements in your sequence or there is no clear pattern. The second method, using `seq`, is convenient when the numbers follow a pattern but not necessarily just increment by. The third method is most convenient to generate numbers in a sequence increasing or decreasing by exactly 1.*

### 2b

Generate a sequence of all even numbers between 0 and 100.

```{r}
#| echo: true
# Generate a sequence of all even numbers between 0 and 100
even_seq <- seq(0, 100, by = 2)
even_seq
# Create a descending sequence of numbers from 100 to 1
desc_seq <- seq(100, 1, by = -1)
desc_seq
```

### 2c

Create a descending sequence from 100 to 1 and assign it to a variable.

```{r}
#| echo: true
#| 
# Create a descending sequence of numbers from 100 to 1
desc_seq_decrease <- seq(100, 1, by = -1)
desc_seq_decrease
```

## Exercise 3: Data Generation and Basic Statistical Analysis

### 3a

Generate a sample of 100 observations from a normal distribution with a mean of 10 and a standard deviation of 2. Use the `rnorm()` function.

```{r}
#| echo: true
#| 
sim_data <- rnorm(n = 100,
                  mean = 10,
                  sd = 2)
```

### 3b

Calculate the mean of this generated sample. Relate this to the population mean. Note the population mean is 10.

```{r}
#| echo: true
#| 
mean(sim_data)
```

***Answer**: This is relatively close to, but not exactly, the population mean. This is because we are taking a random sample from the distribution.*

### 3c

Calculate the difference between the sample mean and the population mean. Discuss the reason for the discrepancy.

```{r}
#| echo: true
#| 
diff_100 <- mean(sim_data) - 10

```

### 3d

Repeat steps 1--3 with a sample size of 10,000. Discuss whether the difference between the sample and population mean decreased and its implications.

```{r}
#| echo: true
## simulate 10000 draws 
sim_data_10000 <- rnorm(n = 10000,
                  mean = 10,
                  sd = 2)

mean_sim_data_10000 <- mean(sim_data_10000)

## 
mean_sim_data_10000 - 10
```

***Answer**: The difference between the sample mean and the population mean decreased as we increased our sample size. This is because as our sample size increases, the mean of the sample tends towards the population mean. This is a fundamental concept in statistics: the law of large numbers.*
